m1 <- mahalanobis(x = diseasenobinary[,1:2],
center = c(mean(diseasenobinary[,1]), mean(diseasenobinary[,2])),
cov = cov(diseasenobinary[,1:2]))
m1
m1>41.44653
which(m1>41.44653)
cov(diseasenobinary[,1:2])
cov(bmiph,1:2)
#pairs BMI and Physical Health
m1 <- mahalanobis(x = diseasenobinary[,1:2],
center = c(mean(diseasenobinary[,1]), mean(diseasenobinary[,2])),
cov = cov(diseasenobinary[,1:2]))
m1
m1>41.44653
which(m1>41.44653)
bmiph<-diseasenobinary[-c(562,9089,9359,9500,10660,13696,13868,16075,18928,20087,21222,24009,25872,29882,30066
,30755,36281,38171,38362,39468,40387,40707,41313,42102,43460,50372,50484,50543,51039,51041
,51822,52415,54063,59259,59847,62847,65114,70245,70595,71186,72092,73478,79171,79546,79691
,79751,80506,81263,83371,88568,93237,94174,94997,99837,102321,103164,104268,104541,104617,104896
,105477,108221,110039,111361,112699,114088,116509,117166,120620,121145,121223,126476,126662,126897,126992
,128369,132580,138049,139408,144356,147786,148038,153634,153791,156094,156396,159674,159942,160361,164796
,171329,171706,173163,175963,176301,176389,177478,180854,184437,184780,185478,188071,189015,191646,192260
,192765,193397,193854,194222,194366,201174,202150,207565,209773,209922,213607,222003,223554,229008,229789
,230433,230740,238362,238420,242247,242835,242856,249716,250333,250789,250985,251941,252707,256408,256478
,258477,259711,260166,261461,262244,262772,263245,263366,263405,265164,265547,266010,267476,267776,267894
,271260,273675,274127,274505,278437,279636,287382,287882,288391,288911,289380,290184,298691,299832,308296,
311346 ),]    #part 1
View(bmiph)
cov(diseasenobinary[,1:2])
cov(bmiph,1:2)
m1na <- m1 >41.44653
m1[m1na] <- NA
as.data.frame(m1)
cov(diseasenobinary[,1:2])
cov(bmiph,1:2)
cov(diseasenobinary[,1:2])
cov(bmiph[,1:2])
cor(diseasenobinary[,1:2])
cor(bmiph[,1:2])
m2 <- mahalanobis(x = diseasenobinary[,2:3],
center = c(mean(diseasenobinary[,2]), mean(diseasenobinary[,3])),
cov = cov(diseasenobinary[,2:3]))
m2>41.44653
which(m2>41.44653)
cov(diseasenobinary)
cor(diseasenobinary)
cov(diseasenobinary[,2:3])
cor(diseasenobinary[,2;3])
cov(diseasenobinary[,2:3])
cor(diseasenobinary[,2:3])
m3 <- mahalanobis(x = diseasenobinary[,3:4],
center = c(mean(diseasenobinary[,3]), mean(diseasenobinary[,4])),
cov = cov(diseasenobinary[,3:4]))
m3
m3>41.44653
which(m3>41.44653)
m3 <- mahalanobis(x = diseasenobinary[,3:4],
center = c(mean(diseasenobinary[,3]), mean(diseasenobinary[,4])),
cov = cov(diseasenobinary[,3:4]))
m3
m3>41.44653
which(m3>41.44653)
cov(diseasenobinary[,3:4])
cor(diseasenobinary[,3:4])
m4 <- mahalanobis(x = diseasenobinary[,4:5],
center = c(mean(diseasenobinary[,4]), mean(diseasenobinary[,5])),
cov = cov(diseasenobinary[,4:5]))
m4
m4>41.44653
which(m4>41.44653)
cov(diseasenobinary[,4:5])
cor(diseasenobinary[,4:5])
m5 <- mahalanobis(x = diseasenobinary[,5:6],
center = c(mean(diseasenobinary[,5]), mean(diseasenobinary[,6])),
cov = cov(diseasenobinary[,5:6]))
m5
m5>41.44653
which(m5>41.44653)
m5 <- mahalanobis(x = diseasenobinary[,5:6],
center = c(mean(diseasenobinary[,5]), mean(diseasenobinary[,6])),
cov = cov(diseasenobinary[,5:6]))
m5
m5>41.44653
which(m5>41.44653)
gensleep<-diseasenobinary[-c(719,1168,1383,2180,2368,3234,3250,5026,5520,7563,7863,8069,8469,9410,9500
,9938,10656,10813,12340,12867,14261,14507,15737,15930,16328,16578,16835,17254,17553,17805
,17846,17874,18258,18368,19274,20018,20234,20995,21738,22670,23089,23589,23865,26149,26153
,28795,29882,30079,30439,30793,31956,32479,32667,33189,33873,34791,35604,37060,37243,37509
,38946,39737,40016,40141,40289,40859,41159,42266,42448,42497,42913,42951,43213,44609,45516
,45942,46053,46479,46607,47173,47385,47454,48215,48220,49106,49641,50094,50138,50188,50520
,50718,51086,51095,51547,51640,51698,51702,51904,52453,52802,52971,53829,54261,54589,54703
,54957,55240,55351,55700,55851,56206,56372,57081,57659,58143,58662,59294,60991,63282,65621
,68218,71952,72715,73318,74200,74720,75002,75969,77228,77286,78873,79174,79323,79353,79761
,80587,81843,82730,87035,88938,89623,89758,89767,90986,92200,94576,95320,96734,98888,98978
,99171,99781,100096,100643,100663,101360,102435,102692,103215,103644,103948,104000,104326,109286,111935
,112764,114173,115862,116253,117210,118342,118790,119565,119664,120189,122857,124088,126163,127359,130029
,130685,134018,139615,140321,146348,149053,149085,149413,150397,150650,151473,151694,151763,151875,151970
,153166,153251,153708,154469,154516,156743,157896,157952,160492,161364,163729,163830,164749,170407,173671
,174327,174975,175743,178549,179609,181177,181505,184537,184580,188877,191894,191914,192673,193165,196706
,197111,197387,201316,202422,202939,203312,204532,205301,205871,206350,207725,208532,208707,209373,209540
,210219,220181,221530,222168,222465,223642,224413,224911,225627,225687,227059,227851,229281,231742,232182
,233856,235628,237072,238355,240120,240273,240720,243045,248094,248118,248203,248701,252511,254121,256926
,257286,258481,258483,258570,258700,259920,261837,262035,262098,262213,262536,263104,263428,264144,266908
,266990,267120,267947,269345,269631,270046,270429,273038,273780,276385,276475,276666,278883,279083,283917
,285622,287854,287855,288108,288910,289212,290805,292792,293639,293698,294388,295337,296560,299980,300500
,300832,301655,302010,302179,302509,304523,306106,306508,306679,307771,307792,308187,309746,310561,313659),]#part,1
View(gensleep)
cov(diseasenobinary[,5:6])
cov(gensleep[,5:6])
cor(diseasenobinary[,5:6])
cor(gensleep[,5:6])
#run a correlation and drop the insignificant ones
diseasedatacorp <- cor(diseasesdata)    #correlation matrix
diseasedatacorp
diseasedatacor <- cor(diseasesdata)    #other correlation matrix
diseasedatacor
diseasedatacor[lower.tri(diseasedatacor,diag=TRUE)] <- NA     #drop duplicates (lower triangle)
diseasedatacor[diseasedatacor == 1] <- NA                     #drop perfect correlations
View(diseasedatacor)
diseasedatacor<-as.data.frame(as.table(diseasedatacor))     #change correlation matrix to a 3 columns table
View(diseasedatacor)
diseasedatacor <- na.omit(diseasedatacor)         #remove the NA values from above
View(diseasedatacor)
diseasedatacoret<-subset(diseasedatacor, abs(diseasedatacor$Freq)>0.05)#choose significant values
View(diseasedatacoret)
diseasedatacoret<-diseasedatacoret[order(-abs(diseasedatacoret[,3])),]      #order by most significant
print(diseasedatacoret)
cormatrix<-reshape2::acast(diseasedatacoret,Var1~Var2, value.var = "Freq")
corrplot(cormatrix,is.corr=FALSE, method="square",tl.col="black", na.label=" ")
#From the correlation matrix, we can conclude that most of the variables in this dataset have very small correlation values. For most variables, the correlation value is less than 0.05. The most significant correlation betwen input variables and in the whole dataset is between DiffWalking and GenHealth with a correlation of 0.428. This means that as one's general health is ranked higher, the easier they find walking or climbing up stairs.
#We also see that none of the input variables have a very high correlation with our output variables: HeartDisease, SkinCancer, and Kidney disease.GenHealth has the highest correlation with HeartDisease, which is -.243. This means that the higher ranking one's general health has, the lower chance they have of having a heart disease. Average Age has the highest correlation with skin cancer, which is 0.262; this means that the older a person is, the higher the chance that they have skin cancer. GenHealth also has the highest correlation with Kidney disease, which is -0.175; this means that the higher ranking one's general health has, the lower the chance that they ever had kidney disease.
# The correlation plot below was modified so that we can focus on analyzing correlation values above 0.05 as they are the most essential and meaningful correlation values that we will focus on in this analysis.
#add scatterplots and descriptions-Ndeh and Karen
#run a correlation and drop the insignificant ones
diseasedatacorp <- cor(diseasesdata)    #correlation matrix
diseasedatacorp
diseasedatacor <- cor(diseasesdata)    #other correlation matrix
diseasedatacor
diseasedatacor[lower.tri(diseasedatacor,diag=TRUE)] <- NA     #drop duplicates (lower triangle)
diseasedatacor[diseasedatacor == 1] <- NA                     #drop perfect correlations
View(diseasedatacor)
diseasedatacor<-as.data.frame(as.table(diseasedatacor))     #change correlation matrix to a 3 columns table
View(diseasedatacor)
diseasedatacor <- na.omit(diseasedatacor)         #remove the NA values from above
View(diseasedatacor)
diseasedatacoret<-subset(diseasedatacor, abs(diseasedatacor$Freq)>0.05)#choose significant values
View(diseasedatacoret)
diseasedatacoret<-diseasedatacoret[order(-abs(diseasedatacoret[,3])),]      #order by most significant
print(diseasedatacoret)
cormatrix<-reshape2::acast(diseasedatacoret,Var1~Var2, value.var = "Freq")
corrplot(cormatrix,is.corr=FALSE, method="square",tl.col="black", na.label=" ")
#From the correlation matrix, we can conclude that most of the variables in this dataset have very small correlation values. For most variables, the correlation value is less than 0.05. The most significant correlation betwen input variables and in the whole dataset is between DiffWalking and GenHealth with a correlation of 0.428. This means that as one's general health is ranked higher, the easier they find walking or climbing up stairs.
#We also see that none of the input variables have a very high correlation with our output variables: HeartDisease, SkinCancer, and Kidney disease.GenHealth has the highest correlation with HeartDisease, which is -.243. This means that the higher ranking one's general health has, the lower chance they have of having a heart disease. Average Age has the highest correlation with skin cancer, which is 0.262; this means that the older a person is, the higher the chance that they have skin cancer. GenHealth also has the highest correlation with Kidney disease, which is -0.175; this means that the higher ranking one's general health has, the lower the chance that they ever had kidney disease.
# The correlation plot below was modified so that we can focus on analyzing correlation values above 0.05 as they are the most essential and meaningful correlation values that we will focus on in this analysis.
#add scatterplots and descriptions-Ndeh and Karen
cormatrix<-reshape2::acast(diseasedatacoret,Var1~Var2, value.var = "Freq")
corrplot(cormatrix,is.corr=FALSE, method="square",tl.col="black", na.label=" ")
diseasedatacorp <- cor(diseasesdata)    #correlation matrix
diseasedatacorp
diseasedatacor <- cor(diseasesdata)    #other correlation matrix
diseasedatacor
diseasedatacor[lower.tri(diseasedatacor,diag=TRUE)] <- NA     #drop duplicates (lower triangle)
diseasedatacor[diseasedatacor == 1] <- NA                     #drop perfect correlations
View(diseasedatacor)
diseasedatacor<-as.data.frame(as.table(diseasedatacor))     #change correlation matrix to a 3 columns table
View(diseasedatacor)
diseasedatacor <- na.omit(diseasedatacor)         #remove the NA values from above
View(diseasedatacor)
diseasedatacoret<-subset(diseasedatacor, abs(diseasedatacor$Freq)>0.05)#choose significant values
View(diseasedatacoret)
diseasedatacoret<-diseasedatacoret[order(-abs(diseasedatacoret[,3])),]      #order by most significant
print(diseasedatacoret)
cormatrix<-reshape2::acast(diseasedatacoret,Var1~Var2, value.var = "Freq")
corrplot(cormatrix,is.corr=FALSE, method="square",tl.col="black", na.label=" ")
install.packages("rmarkdown")
install.packages("knitr")
install.packages("readxl")
install.packages("moments")
install.packages("corrplot")
install.packages("pso")
install.packages("psych")
install.packages("GPArotation")
install.packages("lavaan")
install.packages("scatterplot3d")
install.packages("corrplot")
install.packages("rgl")
install.packages("moments")
library(rmarkdown); library(knitr); library(readxl)
library(moments); library(corrplot); library(pso)
library(psych); library(GPArotation); library(lavaan); library(scatterplot3d);library(corrplot);library(rgl);library(moments)
install.packages("knitr")
install.packages("rmarkdown")
diseasesdata<-  read.csv("Heart Disease Data Updated.csv")
View(diseasesdata)
View(diseasesdata)
dim(diseasesdata)
diseasesdata
diseasedata<-as.matrix(diseasesdata)
cor(diseasenobinary[,5:6])
cor(gensleep[,5:6])
#pairs BMI and Physical Health
m1 <- mahalanobis(x = diseasenobinary[,1:2],
center = c(mean(diseasenobinary[,1]), mean(diseasenobinary[,2])),
cov = cov(diseasenobinary[,1:2]))
m1
m1>41.44653
which(m1>41.44653)
bmiph<-diseasenobinary[-c(562,9089,9359,9500,10660,13696,13868,16075,18928,20087,21222,24009,25872,29882,30066
,30755,36281,38171,38362,39468,40387,40707,41313,42102,43460,50372,50484,50543,51039,51041
,51822,52415,54063,59259,59847,62847,65114,70245,70595,71186,72092,73478,79171,79546,79691
,79751,80506,81263,83371,88568,93237,94174,94997,99837,102321,103164,104268,104541,104617,104896
,105477,108221,110039,111361,112699,114088,116509,117166,120620,121145,121223,126476,126662,126897,126992
,128369,132580,138049,139408,144356,147786,148038,153634,153791,156094,156396,159674,159942,160361,164796
,171329,171706,173163,175963,176301,176389,177478,180854,184437,184780,185478,188071,189015,191646,192260
,192765,193397,193854,194222,194366,201174,202150,207565,209773,209922,213607,222003,223554,229008,229789
,230433,230740,238362,238420,242247,242835,242856,249716,250333,250789,250985,251941,252707,256408,256478
,258477,259711,260166,261461,262244,262772,263245,263366,263405,265164,265547,266010,267476,267776,267894
,271260,273675,274127,274505,278437,279636,287382,287882,288391,288911,289380,290184,298691,299832,308296,
311346 ),]    #part 1
View(bmiph)
cov(diseasenobinary[,1:2])
cov(bmiph[,1:2])
cor(diseasenobinary[,1:2])
cor(bmiph[,1:2])
###m1na <- m1 >41.44653
###m1[m1na] <- NA
###as.data.frame(m1)
m4 <- mahalanobis(x = diseasenobinary[,4:5],
center = c(mean(diseasenobinary[,4]), mean(diseasenobinary[,5])),
cov = cov(diseasenobinary[,4:5]))
m4
m4>41.44653
which(m4>41.44653)
cov(diseasenobinary[,4:5])
cor(diseasenobinary[,4:5])
knitr::opts_chunk$set(echo = TRUE)
diseasesdata<-  read.csv("Heart Disease Data Updated.csv")
View(diseasesdata)
View(diseasesdata)
dim(diseasesdata)
diseasesdata
diseasedata<-as.matrix(diseasesdata)
dis<-diseasesdata[,-c(2:15)]
dis
#I
diseasesdata<-  read.csv("Heart Disease Data Updated.csv")
View(diseasesdata)
View(diseasesdata)
dim(diseasesdata)
diseasesdata
diseasedata<-as.matrix(diseasesdata)
dis<-diseasesdata[,-c(2:15)]
dis
#I
#Eigen values
eigen(cordis)
#Eigen values
eigen(cordis)
#Response variables analysis
cordis<- cor(dis)
cordis
corrplot(cordis, order = "hclust")
#Response variables analysis
cordis<- cor(dis)
cordis
corrplot(cordis, order = "hclust")
#Predictor variables analysis
predictordata<-diseasedata[,-c(1,16,17)]
head(predictordata)
R<-cor(predictordata)
corrplot(cor(predictordata))
library(rmarkdown); library(knitr); library(moments);
library(scatterplot3d); library(corrplot); library(pso)
library(psych); library(GPArotation); library(lavaan)
#Response variables analysis
cordis<- cor(dis)
cordis
corrplot(cordis, order = "hclust")
#Eigen values
eigen(cordis)
eigen(cordis)$values
cordei<- eigen(cordis)$vectors
cordei
sum(eigen(cordis)$values>1.0)
sum(eigen(cordis)$values>0.7)
cods<- diag(eigen(cordis)$values[1:3])
cods
#Predictor variables analysis
predictordata<-diseasedata[,-c(1,16,17)]
head(predictordata)
R<-cor(predictordata)
corrplot(cor(predictordata))
#Eigen values
eigen(cor(predictordata))$values
#Kaiser's criterion: retain 4  factors
#Joliffe's criterion: retain 11 factors. Huge difference between the number of clusters each criterion suggests.
#Inflection point
eigenvalue<-c(2.6609413,1.3914757,1.1550720,1.1052597,0.9739275,0.9471217,0.9050526,0.8756531,0.8292909,0.7852854,0.7365916,0.5897894,0.5695995,0.4749396)
plot(eigenvalue,type="b")
#The intrinsic dimensionality is 2 clusters as the inflection point is the third point from the left of the graph
eigen(cordis)
eigen(cordis)$values
cordei<- eigen(cordis)$vectors
cordei
sum(eigen(cordis)$values>1.0)
sum(eigen(cordis)$values>0.7)
eigen(cor(predictordata))$values
eigenvalues <- eigen(cordis)$values
eigenvalues
plot(eigenvalue,type="b")
plot(eigenvalues,type="b")
cods<- diag(eigen(cordis)$values[1:3])
cods
cods<- diag(eigen(cordis)$values[1:3])
cods
cosa <-cordei %*% sqrt(cods)
cosa
dob <- solve(cordis)%*% cosa
dob
coz <-scale(dis)
coz
fdis <- coz%*%dob
fdis
roai1 <-pca(r=cordis, nfactors=1, rotate = "none")$loadings[]
roai1
roai3<-pca(r=cordis, nfactors=3, rotate = "none")$loadings[]
roai3
plot(roai3, pch=16, xlab = "Factor 1", ylab = "Factor 2" , xlim = c(-1,1), ylim = c(-1,1))
abline(h=0, v=0)
psi1 <- 75* pi/180
psi2 <- 75 * pi/180
PSI <- matrix(c(cos(psi1)*cos(psi2), -cos(psi1)*sin(psi2), sin(psi1),
sin(psi2), cos(psi2), 0,
-sin(psi1)*cos(psi2), sin(psi1)*sin(psi2), -cos(psi1)),
nrow = 3, ncol = 3, byrow = T)
PSI
ropA <- roai3 %*% PSI
ropA
plot(ropA, pch=16, xlab = "Factor 1", ylab = "Factor 2", xlim = c(-1,1), ylim = c(-1,1))
abline(h=0, v=0)
cods<- diag(eigen(cordis)$values[1:3])
cods
cosa <-cordei %*% sqrt(cods)
cosa
roai1 <-pca(r=cordis, nfactors=1, rotate = "none")$loadings[]
roai1
plot(roai3, pch=16, xlab = "Factor 1", ylab = "Factor 2" , xlim = c(-1,1), ylim = c(-1,1))
abline(h=0, v=0)
psi1 <- 75* pi/180
psi2 <- 75 * pi/180
PSI <- matrix(c(cos(psi1)*cos(psi2), -cos(psi1)*sin(psi2), sin(psi1),
sin(psi2), cos(psi2), 0,
-sin(psi1)*cos(psi2), sin(psi1)*sin(psi2), -cos(psi1)),
nrow = 3, ncol = 3, byrow = T)
PSI
ropA <- roai3 %*% PSI
ropA
plot(ropA, pch=16, xlab = "Factor 1", ylab = "Factor 2", xlim = c(-1,1), ylim = c(-1,1))
abline(h=0, v=0)
cosa <-cordei %*% sqrt(cods)
cosa
dob <- solve(cordis)%*% cosa
dob
coz <-scale(dis)
coz
fdis <- coz%*%dob
fdis
corrplot(unrotematrix)
corrplot(unrotimatrix)
#Use of Joliffe's criterion
va<-eigen(cor(predictordata))$vectors
vc<-va[,c(1,2)]      #eigen vectors with 2 clusters
round(vc,2)
unrotimatrix<-pca(r=R,nfactors=2, rotate="none")$loadings[]   #unrotated matrix
unrotimatrix
corrplot(unrotimatrix)    #visualize the loadings on each factor
#let's check for any complex dimensions
which(rowSums(abs(unrotimatrix)>.3)>=2)
#Mental health and average age are complex dimensions
rotatimatrix<-pca(r=R, nfactors=2,rotate="varimax")$loading[] #orthogonal varimax rotation
rotatimatrix
#let's check for any remaining complexities
which(rowSums(abs(rotatimatrix)>.3)>=2)
#after varimax rotation, there still remains complexity for one dimension only: average age.
#unrotated matrix for one factor
roai1 <-pca(r=cordis, nfactors=1, rotate = "none")$loadings[]
roai1
corrplot(roai1)    #visualize the loadings on each factor
#let's check for any complex dimensions
which(rowSums(abs(roai1)>.3)>=2)
#All the 11 dimensions are complex. VERY interesting!
rotatamatrix<-pca(r=R, nfactors=1,rotate="varimax")$loading[] #orthogonal varimax rotation
rotatamatrix
#let's check for any remaining complexities
which(rowSums(abs(roai1)>.3)>=2)
#unrotated matrix for three factors
roai3<-pca(r=cordis, nfactors=3, rotate = "none")$loadings[]
roai3
corrplot(roai3)    #visualize the loadings on each factor
#let's check for any complex dimensions
which(rowSums(abs(roai3)>.3)>=2)
#All the 11 dimensions are complex. VERY interesting!
rotatamatrix<-pca(r=R, nfactors=1,rotate="varimax")$loading[] #orthogonal varimax rotation
rotatamatrix
#let's check for any remaining complexities
which(rowSums(abs(roai3)>.3)>=2)
which(rowSums(abs(roai1)>.3)>=2)
which(rowSums(abs(roai1)>.3)>=2)
roai1vx<-pca(r=R, nfactors=1,rotate="varimax")$loading[] #orthogonal varimax rotation
roai1vx
roai3<-pca(r=cordis, nfactors=3, rotate = "none")$loadings[]
roai3
corrplot(roai3)
which(rowSums(abs(roai3)>.3)>=2)
corrplot(roai3)
which(rowSums(abs(roai3)>.3)>=2)
corrplot(roai3)    #visualize the loadings on each factor
#let's check for any complex dimensions
which(rowSums(abs(roai3)>.3)>=2)
which(rowSums(abs(unrotamatrix)>.3)>=2)
#Use of Joliffe's criterion
va<-eigen(cor(predictordata))$vectors
vb<-va[,-c(12,13,14)]      #eigen vectors with 4 clusters
round(vb,2)
unrotamatrix<-pca(r=R,nfactors=11, rotate="none")$loadings[]   #unrotated matrix
unrotamatrix
corrplot(unrotamatrix)    #visualize the loadings on each factor
#let's check for any complex dimensions
which(rowSums(abs(unrotamatrix)>.3)>=2)
#All the 11 dimensions are complex. VERY interesting!
rotatamatrix<-pca(r=R, nfactors=11,rotate="varimax")$loading[] #orthogonal varimax rotation
rotatamatrix
#let's check for any remaining complexities
which(rowSums(abs(rotatamatrix)>.3)>=2)
#after varimax rotation, there still remains complexity for the following dimensions: average age and mental health.
#Since there's still complexity with Joliffe's criterion, let's try other inflection point.
which(rowSums(abs(unrotamatrix)>.3)>=2)
roai3vx<-pca(r=R, nfactors=3,rotate="varimax")$loading[] #orthogonal varimax rotation
roai3vx
which(rowSums(abs(roai3vx)>.3)>=2)
roai1 <-pca(r=cordis, nfactors=1, rotate = "none")$loadings[]
roai1
corrplot(roai1)
which(rowSums(abs(roai3)>.3)>=2)
roai3vx<-pca(r=cordis, nfactors=3,rotate="varimax")$loading[] #orthogonal varimax rotation
roai3vx
which(rowSums(abs(roai3vx)>.3)>=2)
oblicordis<-pca(r=cordis, nfactors=3,rotate="oblimin")$loading[] #oblique varimax rotation
oblicordis
which(rowSums(abs(oblicordis)>.3)>=2)
oblicordis<-pca(r=cordis, nfactors=1,rotate="oblimin")$loading[] #oblique varimax rotation
oblicordis
which(rowSums(abs(oblicordis)>.3)>=2)
which(rowSums(abs(oblicordis2)>.3)>=2)
oblicordis2<-pca(r=cordis, nfactors=3,rotate="oblimin")$loading[] #oblique varimax rotation
oblicordis2
which(rowSums(abs(oblicordis2)>.3)>=2)
plot(eigenvalues,type="b")
if(!require(installr)) {
install.packages("installr");
require(installr)}
library(rmarkdown); library(knitr); library(readxl)
library(moments); library(corrplot); library(pso)
library(psych); library(GPArotation); library(lavaan); library(scatterplot3d);library(corrplot);library(moments)
diseasesdata<-read.csv("Heart Disease Data Updated.csv")
dim(diseasesdata)
head(diseasesdata)
diseasedata<-as.matrix(diseasesdata)
covdis<- cov(diseasedata)
covdis
#edits: i removed response variables from measurement model and added factors to the structural model
diseqn <- '
# Measurement Model
Wellbeing =~ PhysicalHealth  + GenHealth + DiffWalking + PhysicalActivity
Weight =~ BMI + Diabetic
# Measurement Model (Covariance Specification)
Smoking ~~ AlcoholDrinking
Smoking ~~ Sex
Wellbeing ~~ MentalHealth
MentalHealth ~~ Average.Age
# Structural Model
HeartDisease ~ Asthma + Stroke + Sex + SleepTime +Smoking + AlcoholDrinking + MentalHealth + Average.Age + Weight + Wellbeing
KidneyDisease ~ Asthma + Stroke + Sex + SleepTime +Smoking + AlcoholDrinking + MentalHealth + Average.Age + Weight + Wellbeing
SkinCancer ~ Asthma + Stroke + Sex + SleepTime +Smoking + AlcoholDrinking + MentalHealth + Average.Age+           Weight + Wellbeing
'
dismod <- sem(diseqn, sample.cov = covdis, sample.nobs = 319795)
dismod
parameterEstimates(dismod)[1:40,]
#heart disease
#HeartDisease  ~  asthma: A 1 unit increase in asthma leads to a 0.017 units increase in Heart disease. This effect is significant because the p-value is 0.000 (which is less than the threshold: 0.05).
#HeartDisease  ~  stroke: A 1 unit increase in stroke leads to a 0.192 units increase in Heart disease. This effect is significant because the p-value is 0.000 (which is less than the threshold: 0.05).
#HeartDisease  ~  sex: being female instead of male leads to a 0.050 units decrease in Heart disease. This effect is significant because the p-value is 0.000 (which is less than the threshold: 0.05).
#HeartDisease  ~  sleeptime: A 1 unit increase in sleeptime leads to a 0.001 units increase in Heart disease. This effect is significant because the p-value is 0.003 (which is less than the threshold: 0.05).
#? interpretation suscipiscious
#HeartDisease  ~  smoking: A 1 unit increase in smoking leads to a 0.021 units decrease in Heart disease. This effect is significant because the p-value is 0.000 (which is less than the threshold: 0.05).
#?interpretation to ask about
#?#HeartDisease  ~  mental health: A 1 unit increase in mental health leads to a 0.000 units increase in Heart disease. This effect is significant because the p-value is 0.000 (which is less than the threshold: 0.05).
#?to look into more
#HeartDisease  ~  alcohol drinking: A 1 unit increase in alcohol drinking leads to a 0.016 decrease in Heart disease. This effect is significant because the p-value is 0.000 (which is less than the threshold: 0.05).
#HeartDisease  ~  weight: A 1 unit increase in weight leads to a 0.009 units increase in Heart disease. This effect is significant because the p-value is 0.000 (which is less than the threshold: 0.05).
#HeartDisease  ~  wellbeing: A 1 unit increase in wellbeing leads to a 0.009 units increase in Heart disease. This effect is significant because the p-value is 0.000 (which is less than the threshold: 0.05).
#HeartDisease  ~  Average.Age: A 1 unit increase in Average Age leads to a 0.003 unit increase in Heart disease. The p-value is 0.000 and this effect has the highest z-score as compared to the other dimensions that load to Heart disease
#kidney disease
#KidneyDisease  ~  Average.Age:A 1 unit increase in Average Age leads to a 0.001 unit increase in Kidney disease. The p-value is 0.000 and this effect has the highest z-score as compared to the other dimensions that load to Kidney disease
#SkinCancer  ~  Average.Age:A 1 unit increase in Average Age leads to a 0.004 unit increase in Skin Cancer The p-value is 0.000 and this effect has the highest z-score as compared to the other dimensions that load to Skin cancer
install.packages("htmltools")
#| message: false
mava <- read_csv("MAVA.csv")
mava <- mava %>% rename_with(make.names)
skim(mava)
summary(mava)
head(mava)
